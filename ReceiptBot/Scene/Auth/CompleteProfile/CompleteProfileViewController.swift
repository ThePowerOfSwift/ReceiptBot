//
//  CompleteProfileViewController.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/8/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import Material

protocol CompleteProfileViewControllerOutput {
    var email: String! { get set }
    func doSomething(request: CompleteProfile.Something.Request)
}

class CompleteProfileViewController: SignBaseViewController {
    var output: CompleteProfileViewControllerOutput!
    var router: CompleteProfileRouter!

    @IBOutlet weak var country: UILabel!
    @IBOutlet weak var accountType: UILabel!
    
    @IBAction func completeProfile(_ sender: Button) {
    }
    
    @IBAction func back(_ sender: UIButton) {
        let alert = UIAlertController(title: "Caution!", message: "Do you really want to cancel profile completion?", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
        alert.addAction(UIAlertAction(title: "Yes", style: .default, handler: { [weak self] _ in self?.navigationController?.popToRootViewController(animated: true) }))
        navigationController?.present(alert, animated: true, completion: nil)
    }
    
    @IBAction func pickCountry(_ sender: UITapGestureRecognizer) {
    }
    
    @IBAction func pickAccountType(_ sender: UITapGestureRecognizer) {
    }
    
    // MARK: - Object lifecycle

    override func awakeFromNib() {
        super.awakeFromNib()
        CompleteProfileConfigurator.sharedInstance.configure(viewController: self)
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        doSomethingOnLoad()
    }

    // MARK: - Event handling

    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work

        let request = CompleteProfile.Something.Request()
        output.doSomething(request: request)
    }

    // MARK: - Display logic

    func displaySomething(viewModel: CompleteProfile.Something.ViewModel) {
        // NOTE: Display the result from the Presenter

        // nameTextField.text = viewModel.name
    }
}
