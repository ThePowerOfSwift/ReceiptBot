//
//  SignInInteractor.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/8/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol SignInInteractorOutput {
      func presentLogin(response: SignIn.Login.Response)
}

class SignInInteractor {
    var output: (SignInInteractorOutput & PasswordRecoveryInteractorOutput)!
    var worker: SignInWorker!

    // MARK: - Business logic
    func tryToLogin(request: SignIn.Login.Request) {
        worker = SignInWorker(email: request.email ?? "",
                              password: request.password ?? "")
        
        worker.tryToLogin { [weak self] (wrapper) in
            DispatchQueue.main.async { self?.passAuthData(data: wrapper) }
        }
    }
    
    func recoveryPassword(request: PasswordRecoveryModel.Request) {
        let passwordWorker = PasswordRecoveryWorker(with: request.email)
        passwordWorker.tryToRecovery { [weak self] (data) in
            DispatchQueue.main.async { self?.passStatus(data: data) }
        }
    }
    
    /// MARK: passing data
    func passAuthData(data: RebotValueWrapper<AuthResponse>) {
        let response = SignIn.Login.Response(data: data)
        output.presentLogin(response: response)
    }
    
    func passStatus(data: RebotValueWrapper<StatusDetailResponse>) {
        let response = PasswordRecoveryModel.Response(status: data)
        output.presentRecoveredPassword(response: response)
    }
}
