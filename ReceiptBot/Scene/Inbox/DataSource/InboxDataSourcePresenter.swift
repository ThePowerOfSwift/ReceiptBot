//
//  InboxDataSourcePresenter.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/7/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol InboxDataSourcePresenterOutput: class {
    func update(model: InboxDataSourceModel.Invoices.ViewModel)
}

class InboxDataSourcePresenter {
    weak var output: InboxDataSourcePresenterOutput!

    // MARK: - Presentation logic
    func presentInvoices(response: InboxDataSourceModel.Invoices.Response) {
        let data = response.data
        switch data {
        case .none(_):
            break /// TODO:
        case .value(let invoices):
            pass(theInvoices: invoices)
        }
    }
    
    func pass(theInvoices invoices: [TempInboxInvoiceWorker]) {
        var cellModels: [InboxDataSourceModel.Cell.ViewModel] = []
        
        for invoice in invoices {
            let paidOn = DateFormatters.mdytaFormatter.string(from: invoice.paidOn)
            let cellModel = InboxDataSourceModel.Cell.ViewModel(name: invoice.name,
                                                                paidOn: paidOn,
                                                                status: invoice.status,
                                                                currency: invoice.currency)
            cellModels.append(cellModel)
        }
        
        let viewModel = InboxDataSourceModel.Invoices.ViewModel(cells: cellModels)
        output.update(model: viewModel)
    }
}
