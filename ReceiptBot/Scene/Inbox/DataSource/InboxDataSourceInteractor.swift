//
//  InboxDataSourceInteractor.swift
//  ReceiptBot
//
//  Created by Haik Ampardjian on 4/7/17.
//  Copyright (c) 2017 receiptbot. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol InboxDataSourceInteractorOutput {
      func presentInvoices(response: InboxDataSourceModel.Invoices.Response)
}

class InboxDataSourceInteractor {
    var output: InboxDataSourceInteractorOutput!
    var worker: InboxDataSourceWorker!
    
    var invoices: [SyncConvertedInvoiceResponse]!

    // MARK: - Business logic
    func fetchInvoices() {
        let entityId = AppSettings.shared.user.entityId
        worker = InboxDataSourceWorker(entityId: 2) // TODO: replace 2 with entityId
        worker.fetchInvoices { [weak self] (wrappedArray) in
            self?.pass(data: wrappedArray)
        }
    }
    
    func pass(data: RebotValueWrapper<[SyncConvertedInvoiceResponse]>) {
        storeInvoices(for: data)
        
        let response = InboxDataSourceModel.Invoices.Response(data: data)
        output.presentInvoices(response: response)
    }
    
    /// Save invoices in interactor for later usage
    ///
    /// - Parameter data: Wrapper of Sync Converted Invoice Response
    func storeInvoices(for data: RebotValueWrapper<[SyncConvertedInvoiceResponse]>) {
        switch data {
        case .value(let invoices): self.invoices = invoices
        default: break
        }
    }
}
